# Default values for mongodhara
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# Backend API configuration
backend:
  enabled: true
  replicaCount: 1
  
  image:
    repository: mongodhara/backend
    pullPolicy: IfNotPresent
    tag: ""
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  podAnnotations: {}
  
  podSecurityContext: {}
  
  securityContext: {}
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
    annotations: {}
  
  # Environment variables
  env:
    - name: MONGO_URI
      value: "mongodb://localhost:27017"
  
  # MongoDB URI configuration - supports direct value or secret reference
  mongoUri:
    # Option 1: Direct value (will override env.MONGO_URI if provided)
    value: ""
    # Option 2: Reference to secret
    secretRef:
      enabled: false
      secretName: ""
      key: "MONGO_URI"
  
  # Additional environment variables from ConfigMap or Secret
  envFrom: []
  
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Health check probes
  probes:
    liveness:
      enabled: false
      path: /
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      enabled: false
      path: /
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}

# Frontend UI configuration
frontend:
  enabled: true
  replicaCount: 1
  
  image:
    repository: mongodhara/frontend
    pullPolicy: IfNotPresent
    tag: ""
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  podAnnotations: {}
  
  podSecurityContext: {}
  
  securityContext: {}
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
    annotations: {}
  
  # Environment variables
  env:
    - name: VITE_API_BASE
      value: ""
  
  # Additional environment variables from ConfigMap or Secret
  envFrom: []
  
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Health check probes
  probes:
    liveness:
      enabled: false
      path: /
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      enabled: false
      path: /
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}

# Ingress configuration
ingress:
  # Shared configuration for both ingresses
  shared:
    className: "nginx"
    host: "mongodhara.local"
    
    # Common annotations applied to both ingresses
    annotations:
      # CORS Configuration
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, PATCH, OPTIONS"
      nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-max-age: "86400"
      
      # Security headers
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Shared TLS configuration
    tls:
      enabled: false
      secretName: ""

  # Frontend ingress specific settings
  frontend:
    enabled: true
    path: /mdhara
    pathType: Prefix
    
    # Frontend-specific annotations (merged with shared)
    # Keep empty if no frontend-specific annotations needed
    annotations: {}

  # Backend API ingress specific settings  
  backend:
    enabled: true
    path: /mdhara/api(/|$)(.*)
    pathType: ImplementationSpecific
    
    # Backend-specific annotations (merged with shared)
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      
      # API-specific rate limiting
      nginx.ingress.kubernetes.io/rate-limit-rps: "100"
      nginx.ingress.kubernetes.io/rate-limit-rpm: "6000"
      nginx.ingress.kubernetes.io/rate-limit-connections: "10"
      nginx.ingress.kubernetes.io/limit-rps: "100"
      nginx.ingress.kubernetes.io/limit-rpm: "6000" 
      nginx.ingress.kubernetes.io/limit-connections: "10"
      nginx.ingress.kubernetes.io/custom-http-errors: "429"